// <auto-generated />
using System;
using Login_WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Login_WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250206131843_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Login_WebAPI.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = "HR",
                            Email = "alice.johnson@example.com",
                            JoiningDate = new DateTime(2023, 2, 6, 18, 48, 43, 269, DateTimeKind.Local).AddTicks(6426),
                            Name = "Alice Johnson"
                        },
                        new
                        {
                            Id = 2,
                            Department = "IT",
                            Email = "bob.smith@example.com",
                            JoiningDate = new DateTime(2024, 2, 6, 18, 48, 43, 269, DateTimeKind.Local).AddTicks(6438),
                            ManagerId = 1,
                            Name = "Bob Smith"
                        });
                });

            modelBuilder.Entity("Login_WebAPI.Models.TokenRequest", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("TokenRequests");
                });

            modelBuilder.Entity("Login_WebAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alice.johnson@example.com",
                            EmployeeId = 1,
                            Name = "Alice Johnson",
                            PasswordHash = "$2a$11$N10J9vUUC28dA/7f6LyObOlK1gkVUmn2LqtkA9E4IOzc9CXCKCt.K",
                            RefreshToken = "sample-refresh-token-1",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "bob.smith@example.com",
                            EmployeeId = 2,
                            Name = "Bob Smith",
                            PasswordHash = "$2a$11$5MP6WDXWZ95KDm9xdickYe//DiDiTpxiogljzHPX/gh3gRiayKwLG",
                            RefreshToken = "sample-refresh-token-2",
                            Role = "Employee"
                        });
                });

            modelBuilder.Entity("Login_WebAPI.Models.User", b =>
                {
                    b.HasOne("Login_WebAPI.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
